name: Distribute Artefct to Firebase Distribution

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  run_tests:
    name: Building and distributing app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      #salve o arquivo em bsae-64 e insira-o na secrets depois use esse procedimento para pegar novamente o file e inserir no devido caminho
      - name: Get API Key
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keys.properties'
          fileDir: './'
          encodedString: ${{secrets.KEY_PROPERTIES}}

      #salve o arquivo em bsae-64 e insira-o na secrets depois use esse procedimento para pegar novamente o file e inserir no devido caminho
      - name: Google Services json
        id: write_file_google
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'google-services.json'
          fileDir: './app/'
          encodedString: ${{secrets.GOOGLE_SERVICES_KEY}}

      - name: List files in the repository
        run: |
          cat ./keys.properties    

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Executable Gradle command - assembleDebug
        run: ./gradlew assembleDebug

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{secrets.CREDENTIAL_FILE_CONTENT}}
          groups: testers
          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: 'release notes default'
